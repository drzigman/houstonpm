<?xml version="1.0" encoding="us-ascii"?>
<feed xmlns="http://www.w3.org/2005/Atom"><id>tag:houston.pm.org,2011-03:news</id><title type="html">Houston.pm: What&#39;s New</title><link href="http://houston.pm.org/"/><link href="http://houston.pm.org/atom.xml" rel="self"/><updated>2017-02-03T04:26:29Z</updated><author><name>G. Wade Johnson</name></author><category term="news"/><generator uri="https://metacpan.org/pod/XML::Atom::SimpleFeed" version="0.900">XML::Atom::SimpleFeed</generator><entry><updated>2017-02-03T04:26:29Z</updated><published>2017-02-03T04:26:29Z</published><title type="html">Notes for &#39;Lightning Talks&#39; posted.</title><link href="http://houston.pm.org/talks/2017talks/1701Talk/index.html"/><id>tag:houston.pm.org,2011-03:presentation:1701</id><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Tonight's meeting featured a set of short talks on various topics.
Robert Stone did a talk on TDD. Julian Brown presented a kind of
radix sort that the inventer claims is faster than the standard Perl
sort. Jocelyn Kirby presented about Sessions in web applications.
G. Wade Johnson presented some vim tips. And, Michael R. Davis
finished the presentations with an introduction to some of his
CPAN modules.</p></div></content><category term="technical meeting"/></entry><entry><id>tag:houston.pm.org.2011-03:announce-20170124-29870</id><content type="html">&lt;div&gt;&lt;p&gt;Reini Urban will talk about the cperl fork.&lt;/p&gt;
&lt;/div&gt;</content><published>2017-01-24T23:16:58Z</published><updated>2017-01-24T23:16:58Z</updated><title>Houston.pm Special meeting: Reini Urban on cperl</title></entry><entry><content type="html">&lt;div&gt;&lt;p&gt;This month various members are going to give short talks on various topics of
interest.&lt;/p&gt;
&lt;/div&gt;</content><id>tag:houston.pm.org.2011-03:announce-20170109-29534</id><title>Lightning/short talks</title><updated>2017-01-10T02:00:56Z</updated><published>2017-01-10T02:00:56Z</published></entry><entry><category term="technical meeting"/><id>tag:houston.pm.org,2011-03:presentation:1611</id><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Last month's talk covered a bit of functional programming theory and why it
teaches you more about programming. This month Wade focuses on the aspects of
functional programming you can apply today in your own Perl code.</p></div></content><title type="html">Notes for &#39;Pragmatic Functional Programming in Perl&#39; posted.</title><link href="http://houston.pm.org/talks/2016talks/1611Talk/index.html"/><published>2016-11-18T04:32:49Z</published><updated>2016-11-18T04:32:49Z</updated></entry><entry><id>tag:houston.pm.org.2011-03:announce-20161102-28114</id><content type="html">&lt;div&gt;&lt;p&gt;You&#39;ve heard the arguments on why functional programming is the wave of the
future. You&#39;ve seen the techniques used in other functional languages. And now,
you&#39;re wondering &#34;How does this apply to my day-to-day code?&#34;. G. Wade Johnson
covers how some of these techniques can apply in your day-to-day programming.&lt;/p&gt;
&lt;/div&gt;</content><updated>2016-11-03T03:06:25Z</updated><published>2016-11-03T03:06:25Z</published><title>Pragmatic Functional Programming in Perl</title></entry><entry><id>tag:houston.pm.org,2011-03:presentation:1610</id><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Mark Allen discusses the way doing functional programming in Erlang
has changed how he approaches problems. He then introduced how to
use some of this insight in Perl.</p></div></content><category term="technical meeting"/><published>2016-10-23T23:18:57Z</published><updated>2016-10-23T23:18:57Z</updated><title type="html">Notes for &#39;How Functional Programming Made Me Better at Perl&#39; posted.</title><link href="http://houston.pm.org/talks/2016talks/1610Talk/index.html"/></entry><entry><updated>2016-10-19T04:05:57Z</updated><published>2016-10-19T04:05:57Z</published><link href="http://houston.pm.org/talks/2016talks/1609Talk/index.html"/><title type="html">Notes for &#39;The Read Copy Update Pattern in the Linux Kernel&#39; posted.</title><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Continuing with the lock-free architecture topic Julian introduced at an earlier
meeting, he covered the <em>Read-Copy-Update</em> strategy.</p></div></content><id>tag:houston.pm.org,2011-03:presentation:1609</id><category term="technical meeting"/></entry><entry><id>tag:houston.pm.org.2011-03:announce-20160828-19058</id><content type="html">&lt;div&gt;&lt;p&gt;This month, Julian Brown will follow up on his discussion of lock-free
architectures with a description of the Read Copy Update pattern in the
Linux kernel.&lt;/p&gt;

&lt;p&gt;If there is any time left over (and any interest), Wade Johnson will give
the short talk on two color 3D printing with Perl he was going to do last
meeting.&lt;/p&gt;
&lt;/div&gt;</content><title>Read Copy Update in the Linux Kernel</title><updated>2016-08-29T01:37:11Z</updated><published>2016-08-29T01:37:11Z</published></entry><entry><updated>2016-08-28T16:53:09Z</updated><published>2016-08-28T16:53:09Z</published><title type="html">Notes for &#39;A Set of Short Talks&#39; posted.</title><link href="http://houston.pm.org/talks/2016talks/1608Talk/index.html"/><id>tag:houston.pm.org,2011-03:presentation:1608</id><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>This month's meeting features a group of 4 short talks by some of our
long-time members. Robert Stone discusses connecting objects by reference
versus indirectly by some ID. Julian Brown talked about lock-free architectures.
J. D. Lightsey demonstrated another SQL injection attack using <code>sqlmap</code>.
And, Todd Rinaldo rounds out the talks with a discussion of a Perl vulnerability
related to <code>@INC</code>.</p></div></content><category term="technical meeting"/></entry><entry><updated>2016-08-05T03:30:26Z</updated><published>2016-08-05T03:30:26Z</published><title>A Series of Short Talks and Discussion</title><id>tag:houston.pm.org.2011-03:announce-20160804-27605</id><content type="html">&lt;div&gt;&lt;p&gt;On Thursday August 11, we have a small number of short talks on various
topics leading to a discussion of our development processes and tools.&lt;/p&gt;
&lt;p&gt;If you have a module, technique, or tool that really makes your life better,
now is a good time to spread the knowledge. If you have a problem that someone
else might have insight into, this will be a good time to ask.&lt;/p&gt;
&lt;/div&gt;</content></entry><entry><updated>2016-06-12T14:14:51Z</updated><published>2016-06-12T14:14:51Z</published><link href="http://houston.pm.org/talks/2016talks/1606Talk/index.html"/><title type="html">Notes for &#39;Reconstructing an SQL injection from its fix&#39; posted.</title><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>John Lightsey shows how to use a diff of changes made to fix an SQL injection
attack to create an attack against the unpatched code. He shows the use of
the <code>sqlmap</code> tool to automatically generate useful attacks.</p></div></content><id>tag:houston.pm.org,2011-03:presentation:1606</id><category term="technical meeting"/></entry><entry><published>2016-06-02T02:17:17Z</published><updated>2016-06-02T02:17:17Z</updated><title type="html">Notes for &#39;Binary Tree Serialization Techniques&#39; posted.</title><link href="http://houston.pm.org/talks/2016talks/1605Talk/index.html"/><id>tag:houston.pm.org,2011-03:presentation:1605</id><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Chris Mevissen gave a report on the research he has been doing on serializable binary
trees. He describes the basics of binary tree data structures and descibes a basic
implementation in Perl. He works his way through showing how a binary tree can be
serialized in a form that can be easily reloaded.</p></div></content><category term="technical meeting"/></entry><entry><content type="html">&lt;div&gt;&lt;p&gt;John Lightsey delves once again into the security side of programming with
this presentation. The title pretty much sums it up.&lt;/p&gt;
&lt;/div&gt;</content><id>tag:houston.pm.org.2011-03:announce-20160601-31869</id><title>Reconstructing an SQL injection from its fix</title><updated>2016-06-01T12:17:31Z</updated><published>2016-06-01T12:17:31Z</published></entry><entry><content type="html">&lt;div&gt;&lt;p&gt;Chris Mevissen discusses the results of his research into writing binary
trees to disk.&lt;/p&gt;
&lt;/div&gt;</content><id>tag:houston.pm.org.2011-03:announce-20160505-31144</id><published>2016-05-06T00:50:02Z</published><updated>2016-05-06T00:50:02Z</updated><title>Techniques for Serializing Binary Trees</title></entry><entry><updated>2016-04-26T02:39:51Z</updated><published>2016-04-26T02:39:51Z</published><title type="html">Notes for &#39;FlexSC: Exception-Less System Calls&#39; posted.</title><link href="http://houston.pm.org/talks/2016talks/1604Talk/index.html"/><id>tag:houston.pm.org,2011-03:presentation:1604</id><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Julian Brown covered a presentation describing a method for doing system
calls while reducing context switching overhead. The paper the presentation
was based on covered an academic project to implement this method and the
research showing its effectiveness.</p></div></content><category term="technical meeting"/></entry><entry><content type="html">&lt;div&gt;&lt;p&gt;Julian Brown will present about a low-level technique for making
more efficient system calls.&lt;/p&gt;
&lt;/div&gt;</content><id>tag:houston.pm.org.2011-03:announce-20160407-29641</id><updated>2016-04-07T12:24:49Z</updated><published>2016-04-07T12:24:49Z</published><title>FlexSC: Exception-Less System Calls</title></entry><entry><published>2016-03-13T17:15:38Z</published><updated>2016-03-13T17:15:38Z</updated><title type="html">Notes for &#39;Algorithmic Complexity Made Simple&#39; posted.</title><link href="http://houston.pm.org/talks/2016talks/1603Talk/index.html"/><id>tag:houston.pm.org,2011-03:presentation:1603</id><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>G. Wade Johnson introduced the idea that analyzing the complexity of algorithms
is more than just an academic exercise. He shows how to do relatively simple
analysis for quick wins.</p></div></content><category term="technical meeting"/></entry><entry><title>Algorithmic Complexity Made Simple</title><updated>2016-02-28T22:31:03Z</updated><published>2016-02-28T22:31:03Z</published><content type="html">&lt;div&gt;&lt;p&gt;G. Wade Johnson will give a quick overview of algorithmic complexity and how
a basic understanding of the topic can improve your programming. We&#39;ll touch on
&lt;em&gt;big-O&lt;/em&gt; notation and how to recognize algorithms that are more complex
than necessary. He&#39;ll do all of this without advanced math or theory.&lt;/p&gt;
&lt;/div&gt;</content><id>tag:houston.pm.org.2011-03:announce-20160228-24886</id></entry><entry><id>tag:houston.pm.org,2011-03:presentation:1602</id><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Wordbrain is a puzzle game that involves using letters presented in a clue to
created words. Robert Stone describes creating a solver for this game and explores
techniques for improving the performance of the solver.</p></div></content><category term="technical meeting"/><updated>2016-02-22T04:40:32Z</updated><published>2016-02-22T04:40:32Z</published><title type="html">Notes for &#39;Solving Wordbrain&#39; posted.</title><link href="http://houston.pm.org/talks/2016talks/1602Talk/index.html"/></entry><entry><id>tag:houston.pm.org,2011-03:presentation:1601</id><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Julian Brown used a presentation written by Steven Lembark. The presentation
covered <code>unpack</code> and forking in Perl. Julian described a problem
that he had been trying to solve and how the information in this talk would
have been helpful.</p></div></content><category term="technical meeting"/><updated>2016-01-24T21:58:14Z</updated><published>2016-01-24T21:58:14Z</published><title type="html">Notes for &#39;Adding Forks to Your Perly Tableware&#39; posted.</title><link href="http://houston.pm.org/talks/2016talks/1601Talk/index.html"/></entry></feed>