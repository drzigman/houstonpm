<?xml version="1.0" encoding="us-ascii"?>
<feed xmlns="http://www.w3.org/2005/Atom"><id>tag:houston.pm.org,2011-03:news</id><title type="html">Houston.pm: What&#39;s New</title><link href="http://houston.pm.org/"/><link href="http://houston.pm.org/atom.xml" rel="self"/><updated>2011-07-11T03:49:11Z</updated><author><name>G. Wade Johnson</name></author><category term="news"/><generator uri="http://search.cpan.org/dist/XML-Atom-SimpleFeed/" version="0.86">XML::Atom::SimpleFeed</generator><entry><published>2011-07-11T03:49:11Z</published><link href="http://houston.pm.org/talks/2011talks/1105Talk/index.html"/><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>In this talk, Wade introduces the basics of automated testing assuming little
knowledge of the Perl testing culture. The purpose of the presentation is
not to make you an expert tester, but to introduce the concepts, tools, and
reasoning behind automated testing in Perl.</p></div></content><category term="technical meeting"/><updated>2011-07-11T03:49:11Z</updated><id>tag:houston.pm.org,2011-03:presentation:1105</id><title type="html">Notes for &#39;Introduction to Perl: Testing&#39; posted.</title></entry><entry><link href="http://houston.pm.org/talks/2011talks/1104Talk/index.html"/><published>2011-04-25T03:22:26Z</published><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Gordon described the problem with testing Web Applications. He demonstrated
using Selenium to test applications by automating different browsers to
actually execute the web application.</p></div></content><title type="html">Notes for &#39;Automated Browser Interaction Using WWW::Selenium&#39; posted.</title><id>tag:houston.pm.org,2011-03:presentation:1104</id><updated>2011-04-25T03:22:26Z</updated><category term="technical meeting"/></entry><entry><published>2011-03-13T18:48:17Z</published><link href="http://houston.pm.org/talks/2011talks/1103Talk/index.html"/><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Nick Koston explored using Devel::NYTProf, Benchmark, and Data::Dumper to
optimize Perl code. He explored some of the reasons that Perl code can be slow,
and how to fix it.</p></div></content><category term="technical meeting"/><updated>2011-03-13T18:48:17Z</updated><id>tag:houston.pm.org,2011-03:presentation:1103</id><title type="html">Notes for &#39;Your Perl is Slow (and it does not have to be)&#39; posted.</title></entry><entry><link href="http://houston.pm.org/talks/2010talks/1011Talk/index.html"/><published>2011-03-13T18:29:44Z</published><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Erin describes the new Filesys::POSIX module that provides a POSIX-compliant
virtual file system in Perl.</p></div></content><title type="html">Notes for &#39;Filesys::POSIX -- A real, in-memory filesystem written entirely in Perl&#39; posted.</title><id>tag:houston.pm.org,2011-03:presentation:1011</id><updated>2011-03-13T18:29:44Z</updated><category term="technical meeting"/></entry></feed>