<HTML>
<!-- *** Created by pp2html, build 1.21 from PerlPoint-Converters 1.01  -->
<HEAD>
<TITLE>Using &amp;&amp; and do{} Blocks</TITLE>
</HEAD>
<!-- ************************************************************** -->
<BODY bgcolor="#FFFFFF" text="#000000" link="#1874cd" vlink="#AAAAAA" alink="#FF0000">
<!--
  *** NAVIGATION BAR =================================================
  $Revision: 1.2 $
  $Date: 2001/12/06 21:38:12 $
-->

<center>
<TABLE> 
<TR>
  <TD colspan=3 >
    <font size=-1>
    Next: <a href="slide0005.htm">Parameters With Options</a>
    &nbsp;&nbsp;Previous: <a href="slide0003.htm">The @ARGV array</a>
     &nbsp;&nbsp;Contents: <a href="slide0000.htm" target="Data">Index</a>
    </font> 
  </td>
</TR>
</TABLE>
<img src="orange_line.png">
</center>

<a name="Using &amp;&amp; and do{} Blocks">
<center>
<H1>Using &amp;&amp; and do{} Blocks
</H1></center>


<P>
Putting multiple statements within an if block all on one line is generally not a good practice. But in a situation like the above, where the statements are short, and the if blocks do similar things, it can make the code more readable. We could make it a little cleaner using the logical &amp;&amp; operator and do{} blocks:
</P>

<UL>
<TABLE BORDER=2 CELLPADDING=5 WIDTH=80%><TR><TD bgcolor="#e5e5e5"><PRE>
<B><FONT COLOR="#000000">
    my($opt_f, $opt_or);
    while ( $ARGV[0] =~ /^-/ ) {
        $_ = $ARGV[0];
        /^-or$/ &amp;&amp; do{$opt_or = 1; shift @ARGV; next};
        /^-f$/  &amp;&amp; do{$opt_f  = 1; shift @ARGV; next};
        die &quot;illegal option: $_&quot;;
    }</FONT></B></PRE></TD></TR></TABLE></UL>


<P>
Note, the semi-colon is required after the do-block in this situation.
</P>
</BODY>
</HTML>
