<HTML>
<!-- *** Created by pp2html, build 1.21 from PerlPoint-Converters 1.01  -->
<HEAD>
<TITLE>Using the map() Function</TITLE>
</HEAD>
<!-- ************************************************************** -->
<BODY bgcolor="#FFFFFF" text="#000000" link="#1874cd" vlink="#AAAAAA" alink="#FF0000">
<!--
  *** NAVIGATION BAR =================================================
  $Revision: 1.2 $
  $Date: 2001/12/06 21:38:12 $
-->

<center>
<TABLE> 
<TR>
  <TD colspan=3 >
    <font size=-1>
    Next: <a href="slide0012.htm">Example 1</a>
    &nbsp;&nbsp;Previous: <a href="slide0010.htm">Clean up the code</a>
     &nbsp;&nbsp;Contents: <a href="slide0000.htm" target="Data">Index</a>
    </font> 
  </td>
</TR>
</TABLE>
<img src="orange_line.png">
</center>

<a name="Using the map() Function">
<center>
<H1>Using the map() Function
</H1></center>


<P>
One way to use the map() function provides a method to create a new list from an existing list. This function is similar to the grep() function in its calling syntax:
</P>

<UL>
<TABLE BORDER=2 CELLPADDING=5 WIDTH=80%><TR><TD bgcolor="#e5e5e5"><PRE>
<B><FONT COLOR="#000000">
    map BLOCK LIST
    map EXPRESSION, LIST</FONT></B></PRE></TD></TR></TABLE></UL>


<P>
Also, each item in the list is passed into the block or expression in the $_ variable. However, that's where the similarity to grep() ends. Where grep() returns each item in the list for which the block or expression evaluates to a true value, the map() function returns the result of the block or expression for each item in the list.
</P>
</BODY>
</HTML>
