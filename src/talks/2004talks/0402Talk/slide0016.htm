<HTML>
<!-- *** Created by pp2html, build 1.21 from PerlPoint-Converters 1.01  -->
<HEAD>
<TITLE>A logical use for <I>our</I> declaration</TITLE>
</HEAD>
<!-- ************************************************************** -->
<BODY bgcolor="#FFFFFF" text="#000000" link="#1874cd" vlink="#AAAAAA" alink="#FF0000">
<!--
  *** NAVIGATION BAR =================================================
  $Revision: 1.2 $
  $Date: 2001/12/06 21:38:12 $
-->

<center>
<TABLE> 
<TR>
  <TD colspan=3 >
    <font size=-1>
    Next: <a href="slide0017.htm">Correcting the problem</a>
    &nbsp;&nbsp;Previous: <a href="slide0015.htm">Subtle problems</a>
     &nbsp;&nbsp;Contents: <a href="slide0000.htm" target="Data">Index</a>
    </font> 
  </td>
</TR>
</TABLE>
<img src="orange_line.png">
</center>

<a name="A logical use for <I>our</I> declaration">
<center>
<H1>A logical use for <I>our</I> declaration
</H1></center>


<P>
There is one use that's been found for <I>our</I> variables.  If you're forced to maintain a large code base with lots of global variables, you usually will see lots of code problems, including misspellings of those globals that are overlooked due to the hacked nature of the code. For example, one site had some object-oriented code that stuffed a lot of data into package main.  Code like this:
</P>

<UL>
<TABLE BORDER=2 CELLPADDING=5 WIDTH=80%><TR><TD bgcolor="#e5e5e5"><PRE>
<B><FONT COLOR="#000000">
    $main::sql = $order-&gt;lineItemSQL;
    $main::dbh-&gt;prepare( $main::sql );</FONT></B></PRE></TD></TR></TABLE></UL>
</BODY>
</HTML>
