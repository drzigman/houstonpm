<HTML>
<!-- *** Created by pp2html, build 1.21 from PerlPoint-Converters 1.01  -->
<HEAD>
<TITLE> Summary (addendum)</TITLE>
</HEAD>
<!-- ************************************************************** -->
<BODY bgcolor="#FFFFFF" text="#000000" link="#1874cd" vlink="#AAAAAA" alink="#FF0000">
<!--
  *** NAVIGATION BAR =================================================
  $Revision: 1.2 $
  $Date: 2001/12/06 21:38:12 $
-->

<center>
<TABLE> 
<TR>
  <TD colspan=3 >
    <font size=-1>
    Next: <a href="slide0016.htm"> References</a>
    &nbsp;&nbsp;Previous: <a href="slide0014.htm"> Conclusion</a>
     &nbsp;&nbsp;Contents: <a href="slide0000.htm" target="Data">Index</a>
    </font> 
  </td>
</TR>
</TABLE>
<img src="orange_line.png">
</center>

<a name=" Summary (addendum)">
<center>
<H1>7  Summary (addendum)
</H1></center>


<P>
One further point came out as I was playing with this module. <CODE>Regexp::Common</CODE> does not appear to be a great fit for problems that require extracting a large amount of information from a set of data.
</P>


<P>
On the other hand, if you are trying to carefully check the format of input data or if you need to untaint input, <CODE>Regexp::Common</CODE> may be the best tool for the job. The authors have already solved many of the problems that you might stumble into.
</P>
</BODY>
</HTML>
