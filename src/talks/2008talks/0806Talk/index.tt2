[% WRAPPER writeup_wrap.tt2
    title='Summary of June 2008 Presentation'
    year=2008
%]
    <h2 class="subhead">Emacs and Perl</h2>

    <p>Although there are many editors out on the market. Sometimes the old
      standards still have a lot to offer. Will talked about Emacs, one of
      the <em>old guard</em> of editors from the Unix world.</p>

    <p>He talked a bit about <em>Emacs modes</em> which allow customizing some
      of the behavior of the editor for a particular task. In particular, he
      introduced <code>cperl-mode</code>, which is the new and improved mode
      for writing Perl code.</p>

    <p>Some of the keystrokes he introduced include:</p>

    <ol>
      <li><code>C-x</code> is a command</li>
      <li><code>C-x 3</code> splits the window vertically</li>
      <li><code>C-x 2</code> splits the window horizontally</li>
      <li><code>C-x f</code> opens the prompt for loading a file</li>
      <li><code>C-x o</code> go to the other buffer</li>
      <li><code>C-x b</code> allows you to select a buffer</li>
      <li><code>C-x C-b</code> gives a buffer list</li>
      <li><code>C-x k</code> kills a buffer</li>
      <li><code>C-x 0</code> kills the frame</li>
    </ol>

    <p>The <code>perl-tidy-mode</code> automatically runs
      <code>Perl::Tidy</code> when a buffer is saved. There's also an
      <code>org-mode</code> that provides an organizer, calendar, list
      management, folding support, etc.</p>

    <p>The <code>~/.emacs</code> file is read at startup and can be used to
      configure the program when it begins. One use for this file is to add
      a local directory when modes can be loaded from.</p>

    <p>Will explained that <code>Esc</code> is the <em>Meta</em> key. Some
      other important keystrokes are:</p>

    <ol>
      <li><code>M-x shell</code> brings up a shell</li>
      <li><code>C-g</code> clears out mini-buffer below</li>
      <li><code>M-&lt;</code> move to top of file</li>
      <li><code>M-&gt;</code> move to bottom of file</li>
    </ol>

    <h2 class="subhead">GNU Screen</h2>

    <p>Screen is a window manager that multiplexes multiple processes into
      one physical terminal. It is often used to work with multiple shell
      instances in one terminal. It's sort of like using the multi-tab mode
      of modern terminal programs. Particularly useful when operating on a
      remote machine.</p>

    <p>Some useful Screen commands include:</p>
    <ol>
      <li><code>C-a -</code> Switch to different window or blank window</li>
      <li><code>C-a c</code> make a new screen</li>
      <li><code>C-a A</code> rename a screen</li>
      <li><code>C-a 2</code> move to the second screen</li>
      <li><code>C-a C-a</code> bounce back and forth between twwo screens</li>
      <li><code>--</code> can split screens</li>
      <li><code>C-a d</code> detaches</li>
      <li><code>screen -R -d -</code> attaches to whatever's out there</li>
      <li><code>M</code> monitor the screen to tell you if something has
        happened or has stopped.</li>
    </ol>
[% END -%]
