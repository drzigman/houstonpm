[% WRAPPER writeup_wrap.tt2
    title='Summary of January 2006 Presentation'
    year=2006
%]
    <h1 class="subhead">Accessing a USB device from Perl</h1>

    <p>Paul Archer led an interesting presentation where the group built some
    Perl code to interface with a USB-based device using libusb. This project
    was based on a pair of <a href="http://www.linux.journal.com/">Linux Journal</a>
    Articles</p> written by Greg Kroah-Hartman:
    (<a href="http://www.linuxjournal.com/article/7353">Writing a Simple USB Driver</a>
    and <a href="http://www.linuxjournal.com/article/7466">Writing a Real Driver --
    In User Space</a>)</p>

    <p>In these articles, Greg shows how to access a USB device from Linux. The
    device he uses is the <a href="http://www.delcom-eng.com/products_USBLMP.asp">USB
    Visual Signal Indicator</a> from <a href="http://www.delcom-eng.com/">Delcom
    Engineering</a>.

    <p>The second Linux Journal article showed how to use the <a
    href="http://libusb.sourceforge.net/">libusb</a> library from C to turn lights
    on in the device. The device itself is kind of interesting with LEDs in three
    colors and a buzzer. The device is programmable so it's allow more than just
    turning the lights on and off.</p>

    <p>Paul had compiled the C code from the second article to verify that it worked.
    He wanted to either try to get the C code from the article callable from Perl,
    or write an adapter from libusb to Perl. He was also interested in using <a
    href="http://search.cpan.org/~ingy/Inline-0.44/C/C.pod">Inline::C </a> to
    interface with the library, rather than go the XS route. Finally, he was hoping
    to tap the expertise of the group as a whole to make the development easier.</p>

    <p>Over the course of the meeting, we were able to make a very simple
    <code>Inline::C</code> adapter to the necessary libusb functions, call those
    functions from Perl and to turn the lamp on and off with different colors.</p>

    <p>While we worked on the project, there were many side topics that were
    discussed, some relating to the project and some not. We ran into problems
    passing pointers to structures back and forth across the <code>Inline::C</code>
    interface. We were able to patch around that using <code>void</code> pointers.
    We also ran into a few dumb programmer stunts from several people in the
    audience. In general, most people seemed to be having a good time.</p>

    <p>Here are two stages of the prototype code we worked on. The first is the original
    Perl wrapper around the C code. It doesn't do anything at this point, because we
    weren't really sure how much of the interface was exposed. The second file was the
    completed prototype with the ability to turn the colored LEDs on and off. This is
    definitiely not production-level code. But, since we were trying to learn how to make
    this work, prototype code is fine.</p>

    <ul>
      <li><a href="setled.pl">setled.pl</a>: initial code</li>
      <li><a href="led-pm.pl">led-pm.pl</a>: working prototype</li>
    </ul>

    <p>Hopefully, we will be able to get pictures of the device in action, soon.</p>
[% END -%]
