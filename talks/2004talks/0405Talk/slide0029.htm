<HTML>
<!-- *** Created by pp2html, build 1.21 from PerlPoint-Converters 1.01  -->
<HEAD>
<TITLE>Text::Wrap</TITLE>
</HEAD>
<!-- ************************************************************** -->
<BODY bgcolor="#FFFFFF" text="#000000" link="#1874cd" vlink="#AAAAAA" alink="#FF0000">
<!--
  *** NAVIGATION BAR =================================================
  $Revision: 1.2 $
  $Date: 2001/12/06 21:38:12 $
-->

<center>
<TABLE> 
<TR>
  <TD colspan=3 >
    <font size=-1>
    Next: <a href="slide0030.htm">constant</a>
    &nbsp;&nbsp;Previous: <a href="slide0028.htm">Text::Tabs</a>
     &nbsp;&nbsp;Contents: <a href="slide0000.htm" target="Data">Index</a>
    </font> 
  </td>
</TR>
</TABLE>
<img src="orange_line.png">
</center>

<a name="Text::Wrap">
<center>
<H1>Text::Wrap
</H1></center>


<P>
&quot;Text::Wrap::wrap()&quot; is a very simple paragraph formatter.  It formats a single paragraph at a time by breaking lines at word boundries. Indentation is controlled for the first line ($initial_tab) and all subsequent lines ($subsequent_tab) independently.  Please note: $ini- tial_tab and $subsequent_tab are the literal strings that will be used: it's unlikley you would want to pass in a number.
</P>


<P>
Text::Wrap::fill() is a simple multi-paragraph formatter.  It formats each paragraph separately and then joins them together when it's done. It will destory any whitespace in the original text.  It breaks text into paragraphs by looking for whitespace after a newline.  In other respects it acts like wrap().
</P>


<P>
Example 1
</P>

<UL>
<TABLE BORDER=2 CELLPADDING=5 WIDTH=80%><TR><TD bgcolor="#e5e5e5"><PRE>
<B><FONT COLOR="#000000">
        use Text::Wrap

        $initial_tab = &quot;\t&quot;;    # Tab before first line
        $subsequent_tab = &quot;&quot;;   # All other lines flush left

        print wrap($initial_tab, $subsequent_tab, @text);
        print fill($initial_tab, $subsequent_tab, @text);

        @lines = wrap($initial_tab, $subsequent_tab, @text);

        @paragraphs = fill($initial_tab, $subsequent_tab, @text);</FONT></B></PRE></TD></TR></TABLE></UL>


<P>
Example 2
</P>

<UL>
<TABLE BORDER=2 CELLPADDING=5 WIDTH=80%><TR><TD bgcolor="#e5e5e5"><PRE>
<B><FONT COLOR="#000000">
        use Text::Wrap qw(wrap $columns $huge);

        $columns = 132;         # Wrap at 132 characters
        $huge = 'die';
        $huge = 'wrap';
        $huge = 'overflow';</FONT></B></PRE></TD></TR></TABLE></UL>
</BODY>
</HTML>
