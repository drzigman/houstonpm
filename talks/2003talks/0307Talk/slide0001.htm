<HTML>
<!-- *** Created by pp2html, build 1.21 from PerlPoint-Converters 1.01  -->
<HEAD>
<TITLE>Perl Regular Expressions</TITLE>
</HEAD>
<!-- ************************************************************** -->
<BODY bgcolor="#FFFFFF" text="#000000" link="#1874cd" vlink="#AAAAAA" alink="#FF0000">
<!--
  *** NAVIGATION BAR =================================================
  $Revision: 1.2 $
  $Date: 2001/12/06 21:38:12 $
-->

<center>
<TABLE> 
<TR>
  <TD colspan=3 >
    <font size=-1>
    Next: <a href="slide0002.htm">What we'll cover</a>
    &nbsp;&nbsp;Previous: <a href="slide0000.htm" target="Data">Index</a>
     &nbsp;&nbsp;Contents: <a href="slide0000.htm" target="Data">Index</a>
    </font> 
  </td>
</TR>
</TABLE>
<img src="orange_line.png">
</center>

<a name="Perl Regular Expressions">
<center>
<H1>Perl Regular Expressions
</H1></center>


<P>
Just what is a regular expression anyway?
</P>


<P>
The short answer is that a regular expression is a compact way of describing complex patterns in texts. You can use them to search for patterns and, once found, to modify the patterns in complex ways. They can also be used to launch programmatic actions that depend on patterns.
</P>


<P>
A tongue-in-cheek comment by programmers is worth thinking about: &quot;Sometimes you have a programming problem and it seems like the best solution is to use regular expressions; now you have two problems.&quot; Regular expressions are amazingly powerful and deeply expressive. That's the very reason writing them is just as error-prone as writing any other complex programming code. It's always better to solve a genuinely simple problem in a simple way; when you go beyond simple, think about regular expressions.
</P>
</BODY>
</HTML>
