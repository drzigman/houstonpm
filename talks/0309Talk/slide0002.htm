<HTML>
<!-- *** Created by pp2html, build 1.21 from PerlPoint-Converters 1.01  -->
<HEAD>
<TITLE>Finding Strings withing Strings</TITLE>
</HEAD>
<!-- ************************************************************** -->
<BODY bgcolor="#FFFFFF" text="#000000" link="#1874cd" vlink="#AAAAAA" alink="#FF0000">
<!--
  *** NAVIGATION BAR =================================================
  $Revision: 1.2 $
  $Date: 2001/12/06 21:38:12 $
-->

<center>
<TABLE> 
<TR>
  <TD colspan=3 >
    <font size=-1>
    Next: <a href="slide0003.htm">Processing a List</a>
    &nbsp;&nbsp;Previous: <a href="slide0001.htm">Grabbing and Changing Substrings within a String</a>
     &nbsp;&nbsp;Contents: <a href="slide0000.htm" target="Data">Index</a>
    </font> 
  </td>
</TR>
</TABLE>
<img src="orange_line.png">
</center>

<a name="Finding Strings withing Strings">
<center>
<H1>Finding Strings withing Strings
</H1></center>


<P>
The index() and rindex() functions may be used to locate substrings within a string. The calling syntax is:
</P>

<UL>
<TABLE BORDER=2 CELLPADDING=5 WIDTH=80%><TR><TD bgcolor="#e5e5e5"><PRE>
<B><FONT COLOR="#000000">
    index($string, $substr, $offset)</FONT></B></PRE></TD></TR></TABLE></UL>


<P>
The $string is the string to search, the $substr is the substring to search for, and the optional $offset argument is an integer stating at which position to begin searching in string -- perl counts starting at position 0 (zero). The index() function returns the character position of the substring if found, or -1 otherwise.
</P>


<P>
The rindex() function is similar but searches from the end of the string. The value returned by either function is the position in the string where the substring is located. To find the first occurrence of the substring 'foo' in the string $string use:
</P>

<UL>
<TABLE BORDER=2 CELLPADDING=5 WIDTH=80%><TR><TD bgcolor="#e5e5e5"><PRE>
<B><FONT COLOR="#000000">
    $string = 'abcfoo barfoobaz';
    $position = index($string, 'foo');
    print $position; # prints: 3</FONT></B></PRE></TD></TR></TABLE></UL>


<P>
And the reverse, to find the last occurrence of 'foo':
</P>

<UL>
<TABLE BORDER=2 CELLPADDING=5 WIDTH=80%><TR><TD bgcolor="#e5e5e5"><PRE>
<B><FONT COLOR="#000000">
    $string = 'abcfoo barfoobaz';
    $position = rindex($string, 'foo');
    print $position; # prints: 10</FONT></B></PRE></TD></TR></TABLE></UL>


<P>
Remember, these functions return -1 on failure, so if you are going to use them in conditional tests you will need to test that the return value is greater than or equal to 0 for success:
</P>

<UL>
<TABLE BORDER=2 CELLPADDING=5 WIDTH=80%><TR><TD bgcolor="#e5e5e5"><PRE>
<B><FONT COLOR="#000000">
    if ( index($string,'foo') &gt;= 0 ) {
        # then $string has 'foo'
    }</FONT></B></PRE></TD></TR></TABLE></UL>


<P>
As always, you can read the docs on these functions using the perldoc command:
</P>

<UL>
<TABLE BORDER=2 CELLPADDING=5 WIDTH=80%><TR><TD bgcolor="#e5e5e5"><PRE>
<B><FONT COLOR="#000000">
    perldoc -f index
    perldoc -f rindex</FONT></B></PRE></TD></TR></TABLE></UL>
</BODY>
</HTML>
