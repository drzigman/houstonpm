<HTML>
<!-- *** Created by pp2html, build 1.21 from PerlPoint-Converters 1.01  -->
<HEAD>
<TITLE> Readability Example</TITLE>
</HEAD>
<!-- ************************************************************** -->
<BODY bgcolor="#FFFFFF" text="#000000" link="#1874cd" vlink="#AAAAAA" alink="#FF0000">
<!--
  *** NAVIGATION BAR =================================================
  $Revision: 1.2 $
  $Date: 2001/12/06 21:38:12 $
-->

<center>
<TABLE> 
<TR>
  <TD colspan=3 >
    <font size=-1>
    Next: <a href="slide0020.htm"> Another Approach</a>
    &nbsp;&nbsp;Previous: <a href="slide0018.htm"> Improving Usability of Regexes</a>
     &nbsp;&nbsp;Contents: <a href="slide0000.htm" target="Data">Index</a>
    </font> 
  </td>
</TR>
</TABLE>
<img src="orange_line.png">
</center>

<a name=" Readability Example">
<center>
<H1>11.1  Readability Example
</H1></center>

<UL>
<TABLE><TR><TD valign="TOP"><IMG SRC="./sqr_orange1.png"></TD><TD>
Using <CODE>x</CODE> option and comment your expression.
</TD></TR></TABLE>
</UL>

<UL>
<TABLE BORDER=2 CELLPADDING=5 WIDTH=80%><TR><TD bgcolor="#e5e5e5"><PRE>
<B><FONT COLOR="#000000">
  # A little hard to read
  my %parms = /([^=&amp;]+)=([^=&amp;]*)&amp;?/g;

  # Split CGI parameters into a hash of name/value pairs.
  my %parms =
      m{
         ([^=&amp;]+)   # capture the name appearing before an '='
	 =          # recognize but don't capture the '='
	 ([^=&amp;]*)   # capture a (possibly empty) value after the '='
	 &amp;?         # skip the parameter separator if it exists.
       }gx;         # match multiple times, support comments
</FONT></B></PRE></TD></TR></TABLE></UL>
</BODY>
</HTML>
