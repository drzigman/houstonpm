<HTML>
<!-- *** Created by pp2html, build 1.21 from PerlPoint-Converters 1.01  -->
<HEAD>
<TITLE> Unusual Quoting</TITLE>
</HEAD>
<!-- ************************************************************** -->
<BODY bgcolor="#FFFFFF" text="#000000" link="#1874cd" vlink="#AAAAAA" alink="#FF0000">
<!--
  *** NAVIGATION BAR =================================================
  $Revision: 1.2 $
  $Date: 2001/12/06 21:38:12 $
-->

<center>
<TABLE> 
<TR>
  <TD colspan=3 >
    <font size=-1>
    Next: <a href="slide0020.htm"> Here Documents</a>
    &nbsp;&nbsp;Previous: <a href="slide0018.htm"> Interpolation</a>
     &nbsp;&nbsp;Contents: <a href="slide0000.htm" target="Data">Index</a>
    </font> 
  </td>
</TR>
</TABLE>
<img src="orange_line.png">
</center>

<a name=" Unusual Quoting">
<center>
<H1>7.3  Unusual Quoting
</H1></center>

<UL>
<TABLE><TR><TD valign="TOP"><IMG SRC="./sqr_orange1.png"></TD><TD>
Regular expressions
</TD></TR></TABLE>
</UL>
<UL>

<UL>
<TABLE><TR><TD valign="TOP"><IMG SRC="./sqr_orange2.png"></TD><TD>
Regular expressions interpolate variables and escape sequences like double quotes.
</TD></TR></TABLE>
<TABLE><TR><TD valign="TOP"><IMG SRC="./sqr_orange2.png"></TD><TD>
This doesn't apply if the single quote is used as the delimiter: <CODE>m'abc'</CODE>
</TD></TR></TABLE>
<TABLE><TR><TD valign="TOP"><IMG SRC="./sqr_orange2.png"></TD><TD>
Places you will find this kind of quoting include: <CODE>m//</CODE>, <CODE>s///</CODE>, <CODE>tr///</CODE>, <CODE>y///</CODE>, <CODE>split( // )</CODE>
</TD></TR></TABLE>
</UL>
</UL>

<UL>
<TABLE><TR><TD valign="TOP"><IMG SRC="./sqr_orange1.png"></TD><TD>
Hash keys
</TD></TR></TABLE>
</UL>
<UL>

<UL>
<TABLE><TR><TD valign="TOP"><IMG SRC="./sqr_orange2.png"></TD><TD>
If the key in a hash expression contains no whitespace, the quotes are optional.
</TD></TR></TABLE>
<TABLE><TR><TD valign="TOP"><IMG SRC="./sqr_orange2.png"></TD><TD>
A bare string to the left of the <CODE>=&gt;</CODE> operator is treated as if it is quoted.
</TD></TR></TABLE>
</UL>
</BODY>
</HTML>
