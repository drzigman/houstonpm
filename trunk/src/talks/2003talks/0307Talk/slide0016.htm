<HTML>
<!-- *** Created by pp2html, build 1.21 from PerlPoint-Converters 1.01  -->
<HEAD>
<TITLE>Greedy and Ungreedy Matching</TITLE>
</HEAD>
<!-- ************************************************************** -->
<BODY bgcolor="#FFFFFF" text="#000000" link="#1874cd" vlink="#AAAAAA" alink="#FF0000">
<!--
  *** NAVIGATION BAR =================================================
  $Revision: 1.2 $
  $Date: 2001/12/06 21:38:12 $
-->

<center>
<TABLE> 
<TR>
  <TD colspan=3 >
    <font size=-1>
    Next: <a href="slide0017.htm">Symbol Explanations:</a>
    &nbsp;&nbsp;Previous: <a href="slide0015.htm">Doing Translations</a>
     &nbsp;&nbsp;Contents: <a href="slide0000.htm" target="Data">Index</a>
    </font> 
  </td>
</TR>
</TABLE>
<img src="orange_line.png">
</center>

<a name="Greedy and Ungreedy Matching">
<center>
<H1>Greedy and Ungreedy Matching
</H1></center>


<P>
Perl regular expressions normally match the longest string possible. For instance:
</P>

<UL>
<TABLE BORDER=2 CELLPADDING=5 WIDTH=80%><TR><TD bgcolor="#e5e5e5"><PRE>
<B><FONT COLOR="#000000">
 my($text) = &quot;mississippi&quot;;
 $text =~ m/(i.*s)/;
 print $1 . &quot;\n&quot;;</FONT></B></PRE></TD></TR></TABLE></UL>


<P>
Run the preceding code, and here's what you get:
</P>

<UL>
<TABLE BORDER=2 CELLPADDING=5 WIDTH=80%><TR><TD bgcolor="#e5e5e5"><PRE>
<B><FONT COLOR="#000000">
 ississ</FONT></B></PRE></TD></TR></TABLE></UL>


<P>
It matches the first i, the last s, and everything in between them. But what if you want to match the first i to the s most closely following it? Use this code:
</P>

<UL>
<TABLE BORDER=2 CELLPADDING=5 WIDTH=80%><TR><TD bgcolor="#e5e5e5"><PRE>
<B><FONT COLOR="#000000">
 my($text) = &quot;mississippi&quot;;
 $text =~ m/(i.*?s)/;
 print $1 . &quot;\n&quot;;</FONT></B></PRE></TD></TR></TABLE></UL>


<P>
Now look what the code produces:
</P>

<UL>
<TABLE BORDER=2 CELLPADDING=5 WIDTH=80%><TR><TD bgcolor="#e5e5e5"><PRE>
<B><FONT COLOR="#000000">
 is</FONT></B></PRE></TD></TR></TABLE></UL>


<P>
Clearly, the use of the question mark makes the match ungreedy. But there's another problem in that regular expressions always try to match as early as possible.
</P>
</BODY>
</HTML>
