<HTML>
<!-- *** Created by pp2html, build 1.21 from PerlPoint-Converters 1.01  -->
<HEAD>
<TITLE>Perl code in a regex</TITLE>
</HEAD>
<!-- ************************************************************** -->
<BODY bgcolor="#FFFFFF" text="#000000" link="#1874cd" vlink="#AAAAAA" alink="#FF0000">
<!--
  *** NAVIGATION BAR =================================================
  $Revision: 1.2 $
  $Date: 2001/12/06 21:38:12 $
-->

<center>
<TABLE> 
<TR>
  <TD colspan=3 >
    <font size=-1>
    Next: <a href="slide0009.htm">Fully format the number</a>
    &nbsp;&nbsp;Previous: <a href="slide0007.htm">The /x modifier to make it more readable</a>
     &nbsp;&nbsp;Contents: <a href="slide0000.htm" target="Data">Index</a>
    </font> 
  </td>
</TR>
</TABLE>
<img src="orange_line.png">
</center>

<a name="Perl code in a regex">
<center>
<H1>Perl code in a regex
</H1></center>


<P>
The /e modifier allows the replacement part of a s/// operation to be evaluated as Perl code. This can be useful if you want to manipulate the captured data prior in the substitution. Let's say we want to process a string and round numbers to two decimal places:
</P>

<UL>
<TABLE BORDER=2 CELLPADDING=5 WIDTH=80%><TR><TD bgcolor="#e5e5e5"><PRE>
<B><FONT COLOR="#000000">
    my $string = 'foo = 12.4321 and bar = 14003.1890';
    $string =~ s{(\d+\.\d+)}{sprintf(&quot;%.2f&quot;,$1)}eg;
    print &quot;$string\n&quot;;</FONT></B></PRE></TD></TR></TABLE></UL>
</BODY>
</HTML>
